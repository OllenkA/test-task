{"version":3,"sources":["assets/Title/Title.module.css","assets/photo_2019-11-11_20-16-51.jpg","components/LoginPage/LoginPage.module.css","components/Header/Header.module.css","repository/repository.js","repository/api.js","redux/auth-reducer.js","assets/Title/Title.jsx","redux/post-reducer.js","components/Posts/Posts.jsx","containers/PostsContainer.js","components/MainPage/MainPage.jsx","containers/MainPageContainer.js","components/Header/Header.jsx","containers/HeaderContainer.js","components/Profile/Profile.jsx","containers/ProfileContainer.js","components/LoginPage/LoginForm/LoginForm.jsx","components/LoginPage/LoginPage.jsx","containers/LoginPageContainer.js","App.js","serviceWorker.js","redux/store.js","index.js","components/Posts/Posts.module.css","components/MainPage/MainPage.module.css","components/Profile/Profile.module.css","components/LoginPage/LoginForm/LoginForm.module.css"],"names":["module","exports","repository","_usernameKey","_tokenKey","saveToken","token","localStorage","setItem","this","loadToken","getItem","saveUserName","username","loadUserName","clearAll","axiosInstance","axios","baseURL","interceptors","request","use","a","headers","response","api","login","password","Promise","resolve","setTimeout","ok","getPosts","page","get","data","LOG_OUT","initialState","socialIcons","id","href","size","icon","faFacebook","faLinkedin","faVk","faTelegram","faGithub","faGoogle","isAuth","error","userName","loginSuccess","type","loginError","logOut","authReducer","state","action","Title","props","className","styles","title","posts","currentPage","loading","getPostsSuccess","setLoading","value","postReducer","Posts","post","toUpperCase","slice","text","body","PostsContainer","sectionRef","React","createRef","onScroll","contentHeight","current","offsetHeight","window","pageYOffset","innerHeight","document","addEventListener","clearPosts","removeEventListener","postsElements","map","p","key","container","wrapper","ref","Component","connect","dispatch","getState","MainPage","articles","fake","onClick","changeLanguage","language","button","MainPageContainer","setState","Header","header","nav","item","to","activeClassName","activeLink","logout","auth","Profile","icons","i","socialIcon","target","rel","photoContainer","src","photo","alt","information","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","field","name","placeholder","component","LoginPage","LoginPageContainer","formData","email","result","checkAuthorization","useEffect","exact","path","render","Boolean","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94b0ba86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jcbq\"};","module.exports = __webpack_public_path__ + \"static/media/photo_2019-11-11_20-16-51.6e0baffe.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__25K8o\",\"buttons\":\"LoginPage_buttons__1ZnYH\",\"log\":\"LoginPage_log__1DnKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__24KZ5\",\"nav\":\"Header_nav__2MSYe\",\"button\":\"Header_button__32YgY\",\"item\":\"Header_item__JDDDS\",\"activeLink\":\"Header_activeLink__3ABJa\"};","export const repository = {\r\n    _usernameKey: 'articles/username',\r\n    _tokenKey: 'articles/token',\r\n\r\n    async saveToken(token) {\r\n        localStorage.setItem(this._tokenKey, token);\r\n    },\r\n    async loadToken() {\r\n        return localStorage.getItem(this._tokenKey);\r\n    },\r\n    async saveUserName(username) {\r\n        return localStorage.setItem(this._usernameKey, username)\r\n    },\r\n    async loadUserName() {\r\n        return localStorage.getItem(this._usernameKey)\r\n    },\r\n    async clearAll() {\r\n        localStorage.setItem(this._tokenKey, null);\r\n        localStorage.setItem(this._usernameKey, null);\r\n    }\r\n};\r\n","import * as axios from \"axios\";\r\nimport {repository} from \"./repository\";\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n});\r\n\r\naxiosInstance.interceptors.request.use(async (request) => {\r\n    // add token to every request for authorization\r\n    request.headers.token = await repository.loadToken();\r\n    return request;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(async (response) => {\r\n    //request.headers.token = await repository.loadToken();\r\n    //return request;\r\n    //if (status === 401) {redirect login   or show popup message}\r\n    return response;\r\n});\r\n\r\nconst api = {\r\n    login(username, password) {\r\n        if (username === 'Admin' && password === '123123') {\r\n            return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                    resolve({\r\n                        ok: true,\r\n                        token: \"sdds23w23##$SDS%_s\"\r\n                    })\r\n                }, 1000)\r\n            })\r\n        } else {\r\n            return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                    resolve({ok: false})\r\n                }, 1000)\r\n            })\r\n        }\r\n    },\r\n    async getPosts(page) {\r\n        let response = await axiosInstance\r\n             .get(`posts?_page=${page}`);\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport default api;","import api from \"../repository/api\";\r\nimport {faFacebook, faGithub, faGoogle, faLinkedin, faTelegram, faVk} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {repository} from \"../repository/repository\";\r\n\r\nconst LOGIN_SUCCESS = 'ARTICLES/LOGIN_SUCCESS';\r\nconst LOGIN_ERROR = 'ARTICLES/LOGIN_ERROR';\r\nconst LOG_OUT = 'ARTICLES/LOG_OUT';\r\n\r\nconst initialState = {\r\n    socialIcons: [\r\n        {id: 1, href: 'https://www.facebook.com/profile.php?id=100002374038626', size: '2x', icon: faFacebook},\r\n        {id: 2, href: 'https://www.linkedin.com/in/olga-shamko-153715191/', size: '2x', icon: faLinkedin},\r\n        {id: 3, href: 'https://vk.com/id11395420', size: '2x', icon: faVk},\r\n        {id: 4, href: 'https://t.me/Ollenka_Shamko', size: '2x', icon: faTelegram},\r\n        {id: 5, href: 'https://github.com/OllenkA', size: '2x', icon: faGithub},\r\n        {id: 6, href: 'https://shamko.olga2018@gmail.com', size: '2x', icon: faGoogle},\r\n\r\n    ],\r\n    isAuth: false,\r\n    error: null,\r\n    userName: '',\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                userName: action.username,\r\n            }\r\n        }\r\n        case LOGIN_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: 'The username or password entered is incorrect',\r\n            }\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                userName: null,\r\n                error: null,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n    debugger\r\n    const result = await api.login(username, password);\r\n    if (result.ok) {\r\n        debugger\r\n        await repository.saveToken(result.token);\r\n        await repository.saveUserName(username);\r\n        dispatch(loginSuccess(username))\r\n    } else {\r\n        dispatch(loginError())\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    await repository.clearAll();\r\n    dispatch(logOut())\r\n};\r\n\r\nexport const checkAuthorization = () => async (dispatch) => {\r\n    debugger\r\n    const token = await repository.loadToken();\r\n    if (token === 'null') {\r\n        dispatch(logOut())\r\n    } else {\r\n        const username = await repository.loadUserName();\r\n        dispatch(loginSuccess(username))\r\n        }\r\n};\r\n\r\nexport const loginSuccess = (username) => ({type: LOGIN_SUCCESS, username});\r\nexport const loginError = () => ({type: LOGIN_ERROR});\r\nexport const logOut = () => ({type: LOG_OUT});\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport styles from './Title.module.css';\r\n\r\nfunction Title(props) {\r\n    return <h2 className={styles.title}>{props.title}</h2>\r\n}\r\n\r\nexport default Title;\r\n","import api from \"../repository/api\";\r\n\r\nconst GET_POSTS_SUCCESS = 'ARTICLES/GET_POSTS_SUCCESS';\r\nconst CLEAR_POSTS = 'ARTICLES/CLEAR_POSTS';\r\nconst SET_LOADING = 'ARTICLES/SET_LOADING';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    currentPage: 1,\r\n    loading: false,\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, ...action.posts],\r\n                currentPage: state.currentPage + 1,\r\n            }\r\n        }\r\n        case CLEAR_POSTS: {\r\n            return {\r\n                ...state,\r\n                posts: [],\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case SET_LOADING:{\r\n            return {\r\n                ...state,\r\n                loading: action.value\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getPosts = () => async (dispatch, getState) => {\r\n    const page = getState().post.currentPage;\r\n    dispatch(setLoading(true));\r\n    const posts = await api.getPosts(page);\r\n    dispatch(getPostsSuccess(posts));\r\n    dispatch(setLoading(false))\r\n};\r\n\r\nexport const getPostsSuccess = (posts) => ({type: GET_POSTS_SUCCESS, posts});\r\nexport const clearPosts = () => ({type: CLEAR_POSTS});\r\nexport const setLoading = (value) => ({type: SET_LOADING, value});\r\n\r\nexport default postReducer;","import React from 'react';\r\nimport styles from './Posts.module.css';\r\n\r\n\r\nconst Posts = (props) => {\r\n    return <div className={styles.post}>\r\n        <h3 className={styles.title}>\r\n            {props.title[0].toUpperCase() + props.title.slice(1)}\r\n        </h3>\r\n        <p className={styles.text}>\r\n            {props.body[0].toUpperCase() + props.body.slice(1)}\r\n        </p>\r\n    </div>\r\n};\r\n\r\nexport default Posts;","import React, {Component} from 'react';\r\nimport styles from '../components/Posts/Posts.module.css';\r\nimport Title from \"../assets/Title/Title\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPosts, clearPosts} from \"../redux/post-reducer\";\r\nimport Posts from \"../components/Posts/Posts\";\r\n\r\n\r\nclass PostsContainer extends Component {\r\n    sectionRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.props.getPosts();\r\n        document.addEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearPosts();\r\n        document.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n        let block = this.sectionRef.current;\r\n        let contentHeight = block.offsetHeight;      // 1) высота блока контента вместе с границами\r\n        let yOffset = window.pageYOffset;      // 2) текущее положение скролбара\r\n        let window_height = window.innerHeight;      // 3) высота внутренней области окна документа\r\n        let y = yOffset + window_height;\r\n        // если пользователь достиг конца страницы\r\n        if (y >= contentHeight) {\r\n            if (!this.props.loading) {\r\n                this.props.getPosts();\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {posts = []} = this.props;\r\n        let postsElements = posts.map(p => {\r\n            return <Posts key={p.id} title={p.title} body={p.body}/>\r\n        });\r\n\r\n        return (\r\n            <article className={styles.container}>\r\n                <Title title={'POSTS'}/>\r\n                <section className={styles.wrapper} ref={this.sectionRef}>\r\n                    {postsElements}\r\n                    {this.props.loading && <span className={styles.loading}>LOADING...</span>}\r\n                </section>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    posts: state.post.posts,\r\n    loading: state.post.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPosts, clearPosts})(PostsContainer);","import React from 'react';\r\nimport styles from './MainPage.module.css';\r\nimport Title from \"../../assets/Title/Title\";\r\n\r\n\r\nconst MainPage = (props) => {\r\n\r\n    const changeLanguage = () => {\r\n        props.changeLanguage(props.language === 'en' ? 'ru' : 'en');\r\n    };\r\n\r\n    let articles = {\r\n        'en': <article>\r\n            <h3>Test task</h3>\r\n            <p>Implement an application that can display the following pages:</p>\r\n            <ul>\r\n                <li>/ - main</li>\r\n                <li>/login - login page and password</li>\r\n                <li>/posts - any similar information, you can use for example jsonplaceholder.\r\n                    Optional: Implement infinity scrolling for / posts\r\n                </li>\r\n                <li>/profile - free text page, unavailable without authorization</li>\r\n            </ul>\r\n            <p>On the site, in the header, implement links:</p>\r\n            <ul>\r\n                <li>Main (/)</li>\r\n                <li>Posts (/posts)</li>\r\n                <li>Profile (/profile)</li>\r\n            </ul>\r\n\r\n            <p>If the user clicks on the “profile” page and he is not “authorized” - throw on the page\r\n                /login</p>\r\n            <p>The login form (/ login) accepts fake data:</p>\r\n            <ul>\r\n                <li className={styles.fake}>username: Admin</li>\r\n                <li className={styles.fake}>password: 123123</li>\r\n            </ul>\r\n            <p>If other data is entered, then the message is displayed: \"Username or password not entered\r\n                right\"</p>\r\n            <p>If the correct data are entered, then redirect to the page /profile</p>\r\n            <p>User authorization information can be stored in localStorage. Database does not implement\r\n                necessary.\r\n                The request for / posts, an attempt to log in is to forward through Redux.\r\n            </p>\r\n            <p>Design is not important. Make it so that you can comfortably watch an example in a browser.</p>\r\n        </article>,\r\n        'ru': <article>\r\n            <h3>Задача</h3>\r\n            <p>Реализовать приложение, которое умеет показывать следующие страницы:</p>\r\n            <ul>\r\n                <li>/ - главная</li>\r\n                <li>/login - страница ввода логина и пароля</li>\r\n                <li>/posts - любая однотипная информация, можно воспользоваться например jsonplaceholder.\r\n                    Дополнительно: Реализовать бесконечную прокрутку для /posts\r\n                </li>\r\n                <li>/profile - страница с произвольным текстом, недоступная без авторизации</li>\r\n            </ul>\r\n            <p>На сайте, в шапке реализовать ссылки:</p>\r\n            <ul>\r\n                <li>Главная (/)</li>\r\n                <li>Новости (/posts)</li>\r\n                <li>Профиль (/profile)</li>\r\n            </ul>\r\n\r\n            <p>Если пользователь кликает на страницу “профиля” и он не “авторизован” -\r\n                перекидывать на страницу /login</p>\r\n            <p>Форма входа (/login) принимает “фейковые” данные:</p>\r\n            <ul>\r\n                <li className={styles.fake}>username: Admin</li>\r\n                <li className={styles.fake}>password: 123123</li>\r\n            </ul>\r\n            <p>\r\n                Если введены другие данные, то показывается сообщения: \"Имя пользователя или пароль введены не\r\n                верно\"\r\n            </p>\r\n            <p>Если введены корректные данные, то перебрасывать на страницу /profile</p>\r\n            <p>Информацию об авторизации пользователя можно хранить в localStorage. Базу данных реализовать не\r\n                нужно.\r\n                Запрос для /posts, попытку залогиниться - пробросить через Redux.\r\n            </p>\r\n            <p>Дизайн — не важно. Сделайте, чтобы можно было комфортно смотреть пример в браузере.</p>\r\n        </article>\r\n    };\r\n\r\n    return <main className={styles.container}>\r\n        <Title title={'MAIN'}/>\r\n        <article className={styles.wrapper}>\r\n            <button onClick={changeLanguage} className={styles.button}>\r\n                {props.language === 'ru' ? 'TRANSLATE TO ENGLISH' : 'TRANSLATE TO RUSSIAN'}\r\n            </button>\r\n            { articles[props.language] }\r\n        </article>\r\n    </main>\r\n};\r\n\r\n\r\nexport default MainPage;\r\n","import React, {Component} from 'react';\r\nimport MainPage from \"../components/MainPage/MainPage\";\r\n\r\n\r\nclass MainPageContainer extends Component {\r\n    state = {\r\n        language: 'en',\r\n    };\r\n\r\n    changeLanguage = (language) => {\r\n        this.setState({language: language})\r\n    };\r\n\r\n    render() {\r\n        return <MainPage changeLanguage={this.changeLanguage}\r\n                         language={this.state.language}/>\r\n    }\r\n}\r\n\r\nexport default MainPageContainer;\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction Header(props) {\r\n    return <header className={styles.header}>\r\n        <nav className={styles.nav}>\r\n            <div className={styles.item}>\r\n                <NavLink to='/'>\r\n                    MAIN\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink activeClassName={styles.activeLink} to='/profile'>\r\n                    PROFILE\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink activeClassName={styles.activeLink} to='/posts'>\r\n                    POSTS\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                {props.isAuth ?\r\n                    <div>{props.userName} -\r\n                        <button className={styles.button}\r\n                                onClick={props.logout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        </nav>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"../components/Header/Header\";\r\nimport {logout} from \"../redux/auth-reducer\";\r\n\r\n\r\nfunction HeaderContainer(props) {\r\n\r\n    return <Header {...props}/>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userName: state.auth.userName,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport Title from \"../../assets/Title/Title\";\r\nimport photo from '../../assets/photo_2019-11-11_20-16-51.jpg';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst Profile = (props) => {\r\n        let icons = props.socialIcons.map(i => {\r\n            return <a key={i.id} className={styles.socialIcon} href={i.href}\r\n                      target=\"_blank\" rel=\"noreferrer noopener\">\r\n                <FontAwesomeIcon size={i.size} icon={i.icon}/>\r\n            </a>\r\n        });\r\n\r\n            return <main className={styles.container}>\r\n                <Title title={'PROFILE'}/>\r\n                <article className={styles.wrapper}>\r\n                    <figure className={styles.photoContainer}>\r\n                        <img src={photo} alt=''/>\r\n                    </figure>\r\n                    <section className={styles.information}>\r\n                        <h2>Olga Shamko</h2>\r\n                        <div className={styles.icons}>{icons}</div>\r\n                        <h3>I am frontend REACT.js developer</h3>\r\n                    </section>\r\n                </article>\r\n                <article>\r\n                    <h3>My education</h3>\r\n                    <ul>\r\n                        <li>Minsk State Radio Engineering College</li>\r\n                        <li>Belarusian State University of Informatics and Radioelectronics</li>\r\n                        <li>English - intermediate level</li>\r\n                    </ul>\r\n                </article>\r\n            </main>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"../components/Profile/Profile\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    if(props.isAuth === false){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return <Profile {...props}/>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    socialIcons: state.auth.socialIcons,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProfileContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport styles from './LoginForm.module.css';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit} className={styles.form}>\r\n        <Field className={styles.field} name={'email'}\r\n               placeholder={'Email'} component={'input'}/>\r\n        <Field className={styles.field} name={'password'}\r\n               placeholder={'Password'} type={'password'} component={'input'}/>\r\n        <button className={styles.field}>\r\n            Log in\r\n        </button>\r\n    </form>\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from 'react';\r\nimport styles from './LoginPage.module.css';\r\nimport Title from \"../../assets/Title/Title\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    return <main className={styles.container}>\r\n        <Title title={'LOGIN'}/>\r\n        <LoginReduxForm onSubmit={props.onSubmit}/>\r\n        <div>\r\n            {props.error !== null\r\n                ? props.error\r\n                : null}\r\n        </div>\r\n    </main>\r\n};\r\n\r\n\r\nexport default LoginPage;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {login} from \"../redux/auth-reducer\";\r\nimport LoginPage from \"../components/LoginPage/LoginPage\";\r\n\r\n\r\nclass LoginPageContainer extends Component {\r\n    onSubmit = (formData) => {\r\n        this.props.login(formData.email, formData.password);\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={'/'}/>\r\n        } else {\r\n            return <LoginPage isAuth={this.props.isAuth}\r\n                              error={this.props.error}\r\n                              login={this.props.login}\r\n                              onSubmit={this.onSubmit}/>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    error: state.auth.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(LoginPageContainer);","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Route} from \"react-router-dom\";\nimport {checkAuthorization} from \"./redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport PostsContainer from \"./containers/PostsContainer\";\nimport MainPageContainer from \"./containers/MainPageContainer\";\nimport HeaderContainer from \"./containers/HeaderContainer\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport LoginPageContainer from \"./containers/LoginPageContainer\";\n\n\nfunction App(props) {\n    useEffect(() => {\n        props.checkAuthorization()\n    }, [props.checkAuthorization]);\n\n    return (\n        <main className=\"App\">\n            <HeaderContainer/>\n            <Route exact path='/' render={() => <MainPageContainer/>}/>\n            <Route path='/posts' render={() => <PostsContainer/>}/>\n            <Route exact path='/profile' render={() => <ProfileContainer/>}/>\n            <Route path='/login' render={() => <LoginPageContainer/>}/>\n        </main>\n    );\n}\n\nexport default connect(null, {checkAuthorization})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from \"./auth-reducer\";\r\nimport postReducer from \"./post-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    post: postReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\n// window.store = store;\r\n\r\nexport default store;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Posts_container__16sVb\",\"wrapper\":\"Posts_wrapper__y2mdl\",\"post\":\"Posts_post__3rTIb\",\"loading\":\"Posts_loading__3f7i8\",\"title\":\"Posts_title__1j5pM\",\"text\":\"Posts_text__1a0qN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__e3Dzt\",\"wrapper\":\"MainPage_wrapper__cpnJ9\",\"button\":\"MainPage_button__2wjTW\",\"fake\":\"MainPage_fake__XFll6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__26yQ9\",\"wrapper\":\"Profile_wrapper__33DSQ\",\"information\":\"Profile_information__23w9F\",\"socialIcon\":\"Profile_socialIcon__2o3aW\",\"icons\":\"Profile_icons__FgaVe\",\"photoContainer\":\"Profile_photoContainer__3Ai35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2dsdo\",\"field\":\"LoginForm_field__-yuqP\"};"],"sourceRoot":""}